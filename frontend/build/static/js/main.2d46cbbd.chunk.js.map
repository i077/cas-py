{"version":3,"sources":["components/KatexSettings.js","components/input/LiveInput.js","components/input/InputArea.js","components/history/HistoryElement.js","components/history/HistoryScroll.js","components/history/History.js","components/session/session.js","components/App.js","index.js"],"names":["KatexSettings","macros","LiveInput","className","math","this","props","input","errorColor","settings","React","Component","InputArea","state","previousSelect","selectedText","textAreaChange","bind","handleSubmit","handleReset","handleKeyPress","e","key","ctrlKey","re","replace","exec","replNum","parseInt","substr","length","foundCalc","history","find","calc","id","undefined","output","setState","target","value","replacedInput","getReplacedInput","submitHandler","resetHandler","Form","Group","Row","Col","Control","as","rows","onChange","onKeyUp","Button","onClick","HistoryElement","elementClick","handleClick","historyItem","error","getHistoryItemInput","getHistoryItemError","getHistoryItemOutput","HistoryScroll","scrollToBottom","el","scrollIntoView","behavior","ref","History","handleElement","clickValue","handleHistory","historyList","map","index","Session","getSession","parts","document","cookie","split","pop","shift","setSession","App","handleHistoryClick","createNewSession","getHistory","fetch","method","body","JSON","stringify","then","response","json","nextId","new_history","concat","updateHistory","calculation","getLastCalculation","blankCalculation","NaN","forceUpdate","Container","fluid","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2d46cbbd.chunk.js","sourcesContent":["export const KatexSettings = {\n    macros: {\n        '\\\\dd': '\\\\mathrm{d}',\n        '\\\\dv': '\\\\frac{\\\\text{d} #1}{\\\\text{d} #2}',\n        '\\\\pdv': '\\\\frac{\\\\partial #1}{\\\\partial #2}'\n    }\n}\n","import React from 'react';\nimport TeX from '@matejmazur/react-katex';\nimport './LiveInput.css';\nimport { KatexSettings } from \"../KatexSettings\";\nexport class LiveInput extends React.Component {\n    render() {\n        return (\n            <div className=\"live-input-div\">\n                <TeX\n                    math={this.props.input}\n                    errorColor={'#cc0000'}\n                    settings={KatexSettings}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { LiveInput } from \"./LiveInput\";\nimport './InputArea.css';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nexport class InputArea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            previousSelect: props.selectedText\n        };\n\n        this.textAreaChange = this.textAreaChange.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selectedText !== state.previousSelect) {\n            return { input: props.selectedText, previousSelect: props.selectedText };\n        } else {\n            return { input: state.input };\n        }\n    }\n\n    handleKeyPress(e) {\n        if (e.key === 'Enter' && e.ctrlKey) {\n            this.handleSubmit();\n        }\n    }\n\n    getReplacedInput(input) {\n        var re = /[$]\\d+/g, replace = re.exec(input);\n\n        while (replace !== null) {\n            const replNum = parseInt(replace[0].substr(1, replace[0].length - 1));\n            const foundCalc = this.props.history.find((calc) => calc.id === replNum);\n\n            if (foundCalc === undefined) {\n                input = input.replace(replace[0], '( \\\\text{Reference Not Found})');\n            } else if (foundCalc.output === false || foundCalc.output === \"\") {\n                input = input.replace(replace[0], '( \\\\text{Reference has No Output})');\n            } else {\n                input = input.replace(replace[0], '(' + foundCalc.output + ')');\n            }\n\n            replace = re.exec(input);\n        }\n        return input;\n    }\n\n    textAreaChange(e) {\n        this.setState({\n            input: e.target.value,\n        });\n    }\n\n    handleSubmit() {\n        var replacedInput = this.getReplacedInput(this.state.input);\n        this.props.submitHandler(replacedInput);\n    }\n\n    handleReset() {\n        this.props.resetHandler();\n    }\n\n    render() {\n        return (\n            <div className=\"input-div\">\n                <Form id=\"input-form\" >\n                    <Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Control as=\"textarea\" rows=\"6\" value={this.state.input} onChange={this.textAreaChange} onKeyUp={this.handleKeyPress} />\n                            </Col>\n                            <Col>\n                                <LiveInput input={this.getReplacedInput(this.state.input)} />\n                            </Col>\n                        </Row>\n                        <Row className='input-button-row'>\n                            <Button onClick={this.handleSubmit}>Submit LaTeX</Button>\n                            <Button onClick={this.handleReset}>Reset State</Button>\n                        </Row>\n                    </Form.Group>\n                </Form>\n            </div >\n        );\n    }\n}\n","import React from 'react';\nimport TeX from '@matejmazur/react-katex';\nimport './HistoryElement.css';\nimport { KatexSettings } from \"../KatexSettings\";\n\nexport class HistoryElement extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.elementClick = this.elementClick.bind(this);\n    }\n\n    elementClick() {\n        this.props.handleClick(this.props.historyItem);\n    }\n\n    getHistoryItemInput() {\n        const item = this.props.historyItem;\n        return item.input;\n    }\n\n    getHistoryItemOutput() {\n        const item = this.props.historyItem;\n        return item.output;\n    }\n\n    getHistoryItemError() {\n        const item = this.props.historyItem;\n        return item.error;\n    }\n\n    render() {\n        return (\n            <div className=\"history-item-div\" onClick={this.elementClick}>\n                <div className=\"history-item-id-div\">\n                    [{this.props.historyItem.id}]\n                </div>\n                <div className=\"history-item-textinput-div\">\n                    <TeX\n                        math={this.getHistoryItemInput()}\n                        errorColor={'#cc0000'}\n                        settings={KatexSettings}\n                    />\n                </div>\n                <div className={!this.getHistoryItemError() ? \"history-item-textoutput-div\" : \"history-item-texterror-div\"}>\n                    {!this.getHistoryItemError() ?\n                        <TeX\n                            math={this.getHistoryItemOutput()}\n                            errorColor={'#cc0000'}\n                            settings={KatexSettings}\n                        />\n                        : <code>{this.getHistoryItemError()}</code>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport class HistoryScroll extends React.Component {\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    render() {\n        return <div ref={el => { this.el = el; }} />\n    }\n}\n","import React from 'react';\nimport { HistoryElement } from \"./HistoryElement\";\nimport { HistoryScroll } from \"./HistoryScroll\";\nimport './History.css';\n\nexport class History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleElement = this.handleElement.bind(this);\n    }\n\n    handleElement(clickValue) {\n        this.props.handleHistory(clickValue);\n    }\n\n    render() {\n\n        const historyList = this.props.history.map((historyItem, index) =>\n            <HistoryElement key={index} historyItem={historyItem} handleClick={this.handleElement} />\n        );\n        return (\n            <div className=\"history-div\">\n                <div className=\"history-list-div\">\n                    {historyList}\n                    <HistoryScroll />\n                </div>\n            </div>\n        );\n    }\n}\n","var Session = (function () {\n    var getSession = function () {\n        var value = \"; \" + document.cookie;\n        var parts = value.split(\"; cas-session:\");\n\n        if (parts.length === 2)\n            return parts.pop().split(\";\").shift();\n    };\n\n    var setSession = function (id) {\n        document.cookie = \"cas-session:\" + id;\n    };\n\n    return {\n        getSession: getSession,\n        setSession: setSession,\n    }\n\n})();\n\nexport default Session;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { InputArea } from './input/InputArea';\nimport { History } from './history/History';\n\nimport Session from \"./session/session\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: [], selectedText: \"\" };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleHistoryClick = this.handleHistoryClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (Session.getSession() === undefined) {\n      this.createNewSession();\n    } else {\n      this.getHistory();\n    }\n  }\n\n  createNewSession() {\n    fetch('http://localhost:5000/create-session', {\n      method: 'POST',\n      body: JSON.stringify({ id: Session.getSession() })\n    })\n      .then(response => response.json())\n      .then(response => {\n        Session.setSession(response.id);\n      });\n  }\n\n  handleReset() {\n    if (Session.getSession() !== undefined) {\n      this.setState({\n        history: [],\n        selectedText: \"\",\n      });\n      this.createNewSession();\n    }\n  }\n\n  handleSubmit(input) {\n    fetch('http://localhost:5000/run', {\n      method: 'POST',\n      body: JSON.stringify({ id: Session.getSession(), input: input })\n    })\n      .then(response => response.json())\n      .then(response => {\n        const history = this.state.history;\n        const nextId = (history.length === 0) ? 1 : history[history.length - 1].id + 1;\n\n        const new_history = this.state.history.concat({\n          id: nextId,\n          input: input,\n          error: response.error,\n          output: response.output\n        });\n\n        this.setState({\n          history: new_history,\n        });\n\n        this.updateHistory();\n      });\n  }\n\n  updateHistory() {\n    fetch('http://localhost:5000/update-history', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: Session.getSession(),\n        calculation: this.getLastCalculation()\n      })\n    });\n  }\n\n  getHistory() {\n    fetch('http://localhost:5000/get-history', {\n      method: 'POST',\n      body: JSON.stringify({ id: Session.getSession() })\n    })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          history: response.history,\n        });\n      });\n  }\n\n  getLastCalculation() {\n    const blankCalculation = {\n      id: NaN,\n      input: \"\",\n      error: \"\",\n      output: \"\"\n    }\n    const history = this.state.history;\n    return (history.length === 0) ? blankCalculation : history[history.length - 1];\n  }\n\n  handleHistoryClick(calculation) {\n    this.setState({\n      selectedText: calculation.input,\n    });\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <Container fluid={true} className=\"App-container\">\n        <Row className=\"App-header-row\">\n          CAS\n        </Row>\n        <Row className=\"App-main-row\">\n          <Col className=\"App-col\">\n            <History history={this.state.history} handleHistory={this.handleHistoryClick} />\n            <InputArea submitHandler={this.handleSubmit} resetHandler={this.handleReset} history={this.state.history} selectedText={this.state.selectedText} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nconst root = document.getElementById('root');\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}